{"version":3,"sources":["webpack:///matreshka-binders-file.min.js","webpack:///webpack/bootstrap 2836b3d9ec100116d622","webpack:///./src/index.js","webpack:///./src/file.js","webpack:///./src/_get-filereader-method-name.js","webpack:///./src/_read-files.js","webpack:///./src/dropfiles.js","webpack:///./src/dragover.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","file","dropFiles","dragOver","Matreshka","_Matreshka","binders","createFileChangeHandler","_ref","callback","methodName","event","files","this","length","readFiles","fileBinder","readAs","getFileReaderMethodName","fileChangeHandler","on","addEventListener","destroy","removeEventListener","getValue","_ref2","domEvent","multiple","setValue","FileReader","Error","toUpperCase","slice","prototype","fileReaderMethodName","arrayOfFiles","Array","j","_loop","i","reader","evt","readerResult","result","createDropHandler","preventDefault","dataTransfer","createDragoverHandler","dropEffect","dropFilesBinder","dropHandler","dragoverHandler","eventType","type"],"mappings":"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","file":"matreshka-binders-file.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar file = __webpack_require__(1);\n\t\n\tvar dropFiles = __webpack_require__(4);\n\t\n\tvar dragOver = __webpack_require__(5);\n\t\n\t// extend binders object in browser environment\n\tif (typeof Matreshka === 'function') {\n\t    var _Matreshka = Matreshka;\n\t    var binders = _Matreshka.binders;\n\t\n\t\n\t    binders.file = file;\n\t    binders.dropFiles = dropFiles;\n\t    binders.dragOver = dragOver;\n\t}\n\t\n\t// export these binders in CJS environment\n\tmodule.exports = {\n\t    file: file,\n\t    dropFiles: dropFiles,\n\t    dragOver: dragOver\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar getFileReaderMethodName = __webpack_require__(2);\n\t\n\tvar readFiles = __webpack_require__(3);\n\t\n\tfunction createFileChangeHandler(_ref) {\n\t    var callback = _ref.callback;\n\t    var methodName = _ref.methodName;\n\t\n\t    return function fileChangeHandler(event) {\n\t        var files = this.files;\n\t\n\t\n\t        if (files.length) {\n\t            readFiles(files, methodName, callback);\n\t        } else {\n\t            callback([]);\n\t        }\n\t    };\n\t}\n\t\n\tmodule.exports = fileBinder;\n\tfunction fileBinder(readAs) {\n\t    var methodName = readAs ? getFileReaderMethodName(readAs) : null;\n\t    var fileChangeHandler = void 0;\n\t\n\t    return {\n\t        on: function (callback) {\n\t            fileChangeHandler = createFileChangeHandler({\n\t                callback: callback,\n\t                methodName: methodName\n\t            });\n\t            this.addEventListener('change', fileChangeHandler);\n\t        },\n\t        destroy: function () {\n\t            this.removeEventListener('change', fileChangeHandler);\n\t        },\n\t        getValue: function (_ref2) {\n\t            var domEvent = _ref2.domEvent;\n\t\n\t            var files = domEvent || [];\n\t            return this.multiple ? files : files[0] || null;\n\t        },\n\t\n\t        setValue: null\n\t    };\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = getFileReaderMethodName;\n\tfunction getFileReaderMethodName(readAs) {\n\t\t/* istanbul ignore if  */\n\t\tif (typeof FileReader == 'undefined') {\n\t\t\tthrow Error('FileReader is not supported by this browser');\n\t\t}\n\t\n\t\tvar methodName = 'readAs' + readAs[0].toUpperCase() + readAs.slice(1);\n\t\n\t\tif (!FileReader.prototype[methodName]) {\n\t\t\tthrow Error('Method ' + methodName + ' is not supported by FileReader');\n\t\t}\n\t\n\t\treturn methodName;\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = readFiles;\n\tfunction readFiles(files, fileReaderMethodName, callback) {\n\t    var length = files.length;\n\t\n\t    var arrayOfFiles = Array(length);\n\t\n\t    if (fileReaderMethodName) {\n\t        (function () {\n\t            var j = 0;\n\t\n\t            var _loop = function (i) {\n\t                var reader = new FileReader();\n\t                var file = files[i];\n\t\n\t                arrayOfFiles[i] = file;\n\t\n\t                reader.addEventListener('loadend', function (evt) {\n\t                    file.readerResult = reader.result;\n\t                    if (++j === length) {\n\t                        callback(arrayOfFiles);\n\t                    }\n\t                });\n\t\n\t                reader[fileReaderMethodName](file);\n\t            };\n\t\n\t            for (var i = 0; i < length; i++) {\n\t                _loop(i);\n\t            }\n\t        })();\n\t    } else {\n\t        for (var i = 0; i < length; i++) {\n\t            arrayOfFiles[i] = files[i];\n\t        }\n\t\n\t        callback(arrayOfFiles);\n\t    }\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar getFileReaderMethodName = __webpack_require__(2);\n\t\n\tvar readFiles = __webpack_require__(3);\n\t\n\tfunction createDropHandler(_ref) {\n\t    var callback = _ref.callback;\n\t    var methodName = _ref.methodName;\n\t\n\t    return function dropHandler(event) {\n\t        event.preventDefault();\n\t        var files = event.dataTransfer.files;\n\t\n\t        if (files.length) {\n\t            readFiles(files, methodName, callback);\n\t        } else {\n\t            callback([]);\n\t        }\n\t    };\n\t}\n\t\n\tfunction createDragoverHandler() {\n\t    return function dragoverHandler(event) {\n\t        event.preventDefault();\n\t        event.dataTransfer.dropEffect = 'copy';\n\t    };\n\t}\n\t\n\tmodule.exports = dropFilesBinder;\n\tfunction dropFilesBinder(readAs) {\n\t    var methodName = readAs ? getFileReaderMethodName(readAs) : null;\n\t    var dropHandler = void 0;\n\t    var dragoverHandler = void 0;\n\t\n\t    return {\n\t        on: function (callback) {\n\t            dropHandler = createDropHandler({\n\t                callback: callback,\n\t                methodName: methodName\n\t            });\n\t            dragoverHandler = createDragoverHandler();\n\t\n\t            this.addEventListener('drop', dropHandler);\n\t            this.addEventListener('dragover', dragoverHandler);\n\t        },\n\t        destroy: function () {\n\t            this.removeEventListener('drop', dropHandler);\n\t            this.removeEventListener('dragover', dragoverHandler);\n\t        },\n\t        getValue: function (_ref2) {\n\t            var domEvent = _ref2.domEvent;\n\t\n\t            return domEvent || [];\n\t        },\n\t\n\t        setValue: null\n\t    };\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = dragOver;\n\tfunction dragOver() {\n\t    return {\n\t        on: 'dragover dragenter dragleave dragend drop',\n\t        getValue: function (_ref) {\n\t            var domEvent = _ref.domEvent;\n\t\n\t            var eventType = domEvent && domEvent.type;\n\t            return eventType == 'dragover' || eventType == 'dragenter';\n\t        },\n\t\n\t        setValue: null\n\t    };\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** matreshka-binders-file.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2836b3d9ec100116d622\n **/","import file from './file';\nimport dropFiles from './dropfiles';\nimport dragOver from './dragover';\n\n// extend binders object in browser environment\nif(typeof Matreshka === 'function') {\n    const { binders } = Matreshka;\n\n    binders.file = file;\n    binders.dropFiles = dropFiles;\n    binders.dragOver = dragOver;\n}\n\n// export these binders in CJS environment\nmodule.exports = {\n    file,\n    dropFiles,\n    dragOver\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import getFileReaderMethodName from './_get-filereader-method-name';\nimport readFiles from './_read-files';\n\nfunction createFileChangeHandler({\n    callback,\n    methodName\n}) {\n    return function fileChangeHandler(event) {\n        const { files } = this;\n\n        if (files.length) {\n\t\t\treadFiles(files, methodName, callback);\n\t\t} else {\n\t\t\tcallback([]);\n\t\t}\n    }\n}\n\nexport default function fileBinder(readAs) {\n    const methodName = readAs ? getFileReaderMethodName(readAs) : null;\n    let fileChangeHandler;\n\n    return {\n        on(callback) {\n            fileChangeHandler = createFileChangeHandler({\n                callback,\n                methodName\n            });\n            this.addEventListener('change', fileChangeHandler);\n        },\n        destroy() {\n            this.removeEventListener('change', fileChangeHandler);\n        },\n        getValue({ domEvent }) {\n            const files = domEvent || [];\n\t\t\treturn this.multiple ? files : files[0] || null;\n        },\n        setValue: null\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/file.js\n **/","export default function getFileReaderMethodName(readAs) {\n\t/* istanbul ignore if  */\n\tif (typeof FileReader == 'undefined') {\n\t\tthrow Error('FileReader is not supported by this browser');\n\t}\n\n\tconst methodName = `readAs${readAs[0].toUpperCase()}${readAs.slice(1)}`;\n\n\tif (!FileReader.prototype[methodName]) {\n\t\tthrow Error(`Method ${methodName} is not supported by FileReader`);\n\t}\n\n\treturn methodName;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/_get-filereader-method-name.js\n **/","export default function readFiles(files, fileReaderMethodName, callback) {\n    const { length } = files;\n    const arrayOfFiles = Array(length);\n\n    if(fileReaderMethodName) {\n        let j = 0;\n        for(let i = 0; i < length; i++) {\n            const reader = new FileReader();\n            const file = files[i];\n\n            arrayOfFiles[i] = file;\n\n            reader.addEventListener('loadend', (evt) => {\n\t\t\t\tfile.readerResult = reader.result;\n\t\t\t\tif (++j === length) {\n\t\t\t\t\tcallback(arrayOfFiles);\n\t\t\t\t}\n\t\t\t});\n\n            reader[fileReaderMethodName](file)\n        }\n    } else {\n        for(let i = 0; i < length; i++) {\n            arrayOfFiles[i] = files[i];\n        }\n\n        callback(arrayOfFiles);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/_read-files.js\n **/","import getFileReaderMethodName from './_get-filereader-method-name';\nimport readFiles from './_read-files';\n\nfunction createDropHandler({\n    callback,\n    methodName\n}) {\n    return function dropHandler(event) {\n        event.preventDefault();\n\t\tconst files = event.dataTransfer.files;\n\n\t\tif (files.length) {\n\t\t    readFiles(files, methodName, callback);\n\t\t} else {\n\t\t\tcallback([]);\n\t\t}\n    }\n}\n\nfunction createDragoverHandler() {\n    return function dragoverHandler(event) {\n        event.preventDefault();\n\t\tevent.dataTransfer.dropEffect = 'copy';\n    }\n}\n\nexport default function dropFilesBinder(readAs) {\n    const methodName = readAs ? getFileReaderMethodName(readAs) : null;\n    let dropHandler;\n    let dragoverHandler;\n\n    return {\n        on(callback) {\n            dropHandler = createDropHandler({\n                callback,\n                methodName\n            });\n            dragoverHandler = createDragoverHandler();\n\n            this.addEventListener('drop', dropHandler);\n            this.addEventListener('dragover', dragoverHandler);\n        },\n        destroy() {\n            this.removeEventListener('drop', dropHandler);\n            this.removeEventListener('dragover', dragoverHandler);\n        },\n        getValue({ domEvent }) {\n\t\t\treturn domEvent || [];\n\t\t},\n        setValue: null\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dropfiles.js\n **/","export default function dragOver() {\n    return {\n    \ton: 'dragover dragenter dragleave dragend drop',\n    \tgetValue({ domEvent }) {\n    \t\tconst eventType = domEvent && domEvent.type;\n    \t\treturn eventType == 'dragover' || eventType == 'dragenter';\n    \t},\n    \tsetValue: null\n    };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dragover.js\n **/"],"sourceRoot":""}